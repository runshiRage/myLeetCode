一.单例的写法有哪几种？ 什么是线程安全的单例，怎么写？

	/**
	* 单例模式示例与静态工厂方法
	*/
	public class Singleton{
	    //initailzed during class loading
	    private static final Singleton INSTANCE = new Singleton();
	
	    //to prevent creating another instance of Singleton
	    private Singleton(){}
	
	    public static Singleton getSingleton(){
	        return INSTANCE;
	    }
	}

	/**
	* 单例模式示例,双重锁定检查
	*/
	public class DoubleCheckedLockingSingleton{
	     private volatile DoubleCheckedLockingSingleton INSTANCE;
	
	     private DoubleCheckedLockingSingleton(){}
	
	     public DoubleCheckedLockingSingleton getInstance(){
	         if(INSTANCE == null){
	            synchronized(DoubleCheckedLockingSingleton.class){
	                //double checking Singleton instance
	                if(INSTANCE == null){
	                    INSTANCE = new DoubleCheckedLockingSingleton();
	                }
	            }
	         }
	         return INSTANCE;
	     }
	}
	
	
	
	/** 传统的单例一旦实现了可序列化接口，则不再是单例，因为 readObject() 方法总是返回一个新实例 。
		使用枚举创建的单例，不会出现这个情况，序列化可由jvm自行处理
	*/